
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftANDORnonassocEQUALS_EQUALSNOT_EQUALSnonassocGREATERLESSGREATER_EQUALLESS_EQUALNOT_UNARYleftPLUSMINUSleftTIMESDIVIDEMODrightUMINUSAND COLON COMMA DECL DEF DIVIDE ELSE EQUALS EQUALS_EQUALS FALSE FLOAT GETARRAY GREATER GREATER_EQUAL IF INT LBRACE LBRACKET LESS LESS_EQUAL LPAREN MINUS MOD NOT_EQUALS NOT_UNARY OR PLUS RBRACE RBRACKET RETURN RPAREN SEMICOLON STRING TIMES TRUE TYPE_BOOLEAN TYPE_FLOAT TYPE_INT TYPE_STRING TYPE_VOID VARIABLE WHILEprogram_helper : declaration program_helper\n\t                  | definition program_helper\n\t                  | declaration\n\t                  | definitionprogram : program_helperdeclaration : DECL VARIABLE LPAREN arguments RPAREN type\n\t\t\t\t   | DECL VARIABLE LPAREN empty_args RPAREN typedefinition : DEF VARIABLE LPAREN arguments RPAREN type LBRACE def_block  return RBRACE\n\t              | DEF VARIABLE LPAREN empty_args RPAREN type LBRACE def_block return RBRACEtype : COLON TYPE_INT\n\t\t\t| COLON TYPE_FLOAT\n\t\t\t| COLON TYPE_VOID\n\t\t\t| COLON TYPE_STRING\n\t\t\t| COLON TYPE_BOOLEANarray_type : COLON LBRACKET TYPE_INT RBRACKET\n\t\t\t\t  | COLON LBRACKET TYPE_FLOAT RBRACKET\n\t\t\t\t  | COLON LBRACKET TYPE_VOID RBRACKET\n\t\t\t\t  | COLON LBRACKET TYPE_STRING RBRACKET\n\t\t\t\t  | COLON LBRACKET TYPE_BOOLEAN RBRACKETempty : empty_args : empty_args_inv : args : VARIABLE type COMMA args\n\t        | VARIABLE typearguments : argsargs_inv : expression COMMA args_inv\n\t            | expressionarguments_funinvocation : args_inv\n\t                           | empty_args_invstats : statment\n\t         | statment statsstatments : statsdef_stats : def_statment\n\t             | def_statment def_statsdef_statments : def_statsdef_statment : statment_expression\n\t\t\t\t    | if\n\t\t\t\t    | while\n\t\t\t\t    | var_decl\n\t\t\t\t    | var_assign\n\t\t\t\t    | array_decl\n\t\t\t\t    | array_assignblock : LBRACE statments RBRACE\n\t         | LBRACE empty RBRACEdef_block : def_statments\n\t             | emptystatment : return\n\t\t\t\t| statment_expression\n\t\t\t\t| if\n\t\t\t\t| while\n\t\t\t\t| var_decl\n\t\t\t\t| var_assign\n\t\t\t\t| array_decl\n\t\t\t\t| array_assignreturn : RETURN empty_args SEMICOLON\n\t\t\t  | RETURN expression SEMICOLONstatment_expression : expression SEMICOLONif : IF expression block else\n\t      | IF expression block emptyelse : ELSE blockwhile : WHILE expression blockvar_decl : VARIABLE type EQUALS expression SEMICOLONarray_decl : VARIABLE array_type SEMICOLONvar_assign : VARIABLE EQUALS expression SEMICOLONarray_assign : VARIABLE LBRACKET expression RBRACKET EQUALS expression SEMICOLONexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression                 \n                  | expression MOD expression            \n                  | expression AND expression\n                  | expression OR expression\n                  | expression EQUALS_EQUALS expression\n                  | expression NOT_EQUALS expression\n                  | expression GREATER expression\n                  | expression LESS expression\n                  | expression GREATER_EQUAL expression\n                  | expression LESS_EQUAL expressionexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : FLOATexpression : INTexpression : STRINGexpression : VARIABLEexpression : TRUE\n\t\t\t\t  | FALSEexpression : NOT_UNARY expressionexpression : VARIABLE LBRACKET expression RBRACKET\n\t\t\t\t  | GETARRAY LBRACKET expression RBRACKETexpression : VARIABLE LPAREN arguments_funinvocation RPAREN'
    
_lr_action_items = {'DECL':([0,3,4,26,27,28,29,30,31,32,106,126,],[5,5,5,-10,-11,-12,-13,-14,-6,-7,-8,-9,]),'DEF':([0,3,4,26,27,28,29,30,31,32,106,126,],[6,6,6,-10,-11,-12,-13,-14,-6,-7,-8,-9,]),'$end':([1,2,3,4,7,8,26,27,28,29,30,31,32,106,126,],[0,-5,-3,-4,-1,-2,-10,-11,-12,-13,-14,-6,-7,-8,-9,]),'VARIABLE':([5,6,11,12,25,36,37,39,44,45,46,47,48,49,50,51,53,54,55,61,65,67,68,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,95,97,105,122,123,124,128,131,138,139,140,141,146,147,148,149,150,151,152,153,154,156,157,165,166,167,170,],[9,10,13,13,13,38,38,71,38,-36,-37,-38,-39,-40,-41,-42,71,71,71,71,71,71,71,71,-57,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-63,71,-20,38,-61,-64,71,-55,-56,-58,-59,38,-47,-48,-49,-50,-51,-52,-53,-54,-62,71,-60,-43,-44,-65,]),'LPAREN':([9,10,36,37,38,39,44,45,46,47,48,49,50,51,53,54,55,61,65,67,68,71,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,95,97,105,122,123,124,128,131,138,139,140,141,146,147,148,149,150,151,152,153,154,156,157,165,166,167,170,],[11,12,39,39,68,39,39,-36,-37,-38,-39,-40,-41,-42,39,39,39,39,39,39,39,68,39,-57,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-63,39,-20,39,-61,-64,39,-55,-56,-58,-59,39,-47,-48,-49,-50,-51,-52,-53,-54,-62,39,-60,-43,-44,-65,]),'RPAREN':([11,12,14,15,16,17,18,19,26,27,28,29,30,35,56,57,58,59,60,68,70,71,91,92,99,100,101,102,104,109,110,111,112,113,114,115,116,117,118,119,120,121,130,155,158,164,],[-21,-21,21,22,-25,23,24,-24,-10,-11,-12,-13,-14,-23,-81,-82,-83,-85,-86,-22,104,-84,-79,-87,130,-28,-29,-27,-80,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-90,-89,-26,-88,]),'COLON':([13,21,22,23,24,38,],[20,20,20,20,20,69,]),'COMMA':([19,26,27,28,29,30,56,57,58,59,60,71,91,92,102,104,109,110,111,112,113,114,115,116,117,118,119,120,121,130,155,164,],[25,-10,-11,-12,-13,-14,-81,-82,-83,-85,-86,-84,-79,-87,131,-80,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-90,-89,-88,]),'TYPE_INT':([20,69,103,],[26,26,132,]),'TYPE_FLOAT':([20,69,103,],[27,27,133,]),'TYPE_VOID':([20,69,103,],[28,28,134,]),'TYPE_STRING':([20,69,103,],[29,29,135,]),'TYPE_BOOLEAN':([20,69,103,],[30,30,136,]),'LBRACE':([26,27,28,29,30,33,34,56,57,58,59,60,71,89,90,91,92,104,109,110,111,112,113,114,115,116,117,118,119,120,121,130,142,155,164,],[-10,-11,-12,-13,-14,36,37,-81,-82,-83,-85,-86,-84,123,123,-79,-87,-80,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,-90,123,-89,-88,]),'EQUALS':([26,27,28,29,30,38,64,129,],[-10,-11,-12,-13,-14,65,95,157,]),'RETURN':([36,37,40,41,42,43,44,45,46,47,48,49,50,51,63,74,75,97,122,123,124,128,138,139,140,141,146,147,148,149,150,151,152,153,154,156,165,166,167,170,],[-20,-20,73,-45,-46,-35,-33,-36,-37,-38,-39,-40,-41,-42,73,-34,-57,-63,-20,73,-61,-64,-55,-56,-58,-59,73,-47,-48,-49,-50,-51,-52,-53,-54,-62,-60,-43,-44,-65,]),'IF':([36,37,44,45,46,47,48,49,50,51,75,97,122,123,124,128,138,139,140,141,146,147,148,149,150,151,152,153,154,156,165,166,167,170,],[53,53,53,-36,-37,-38,-39,-40,-41,-42,-57,-63,-20,53,-61,-64,-55,-56,-58,-59,53,-47,-48,-49,-50,-51,-52,-53,-54,-62,-60,-43,-44,-65,]),'WHILE':([36,37,44,45,46,47,48,49,50,51,75,97,122,123,124,128,138,139,140,141,146,147,148,149,150,151,152,153,154,156,165,166,167,170,],[54,54,54,-36,-37,-38,-39,-40,-41,-42,-57,-63,-20,54,-61,-64,-55,-56,-58,-59,54,-47,-48,-49,-50,-51,-52,-53,-54,-62,-60,-43,-44,-65,]),'MINUS':([36,37,38,39,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,65,67,68,70,71,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,98,102,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,128,129,130,131,137,138,139,140,141,146,147,148,149,150,151,152,153,154,155,156,157,164,165,166,167,169,170,],[55,55,-84,55,55,-36,-37,-38,-39,-40,-41,-42,77,55,55,55,-81,-82,-83,-85,-86,55,55,55,55,77,-84,55,-57,55,55,55,55,55,55,55,55,55,55,55,55,55,77,77,-79,77,55,55,77,-63,77,77,-80,55,77,-66,-67,-68,-69,-70,77,77,77,77,77,77,77,77,-20,55,-61,77,77,-64,-88,-90,55,77,-55,-56,-58,-59,55,-47,-48,-49,-50,-51,-52,-53,-54,-89,-62,55,-88,-60,-43,-44,77,-65,]),'FLOAT':([36,37,39,44,45,46,47,48,49,50,51,53,54,55,61,65,67,68,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,95,97,105,122,123,124,128,131,138,139,140,141,146,147,148,149,150,151,152,153,154,156,157,165,166,167,170,],[56,56,56,56,-36,-37,-38,-39,-40,-41,-42,56,56,56,56,56,56,56,56,-57,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-63,56,-20,56,-61,-64,56,-55,-56,-58,-59,56,-47,-48,-49,-50,-51,-52,-53,-54,-62,56,-60,-43,-44,-65,]),'INT':([36,37,39,44,45,46,47,48,49,50,51,53,54,55,61,65,67,68,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,95,97,105,122,123,124,128,131,138,139,140,141,146,147,148,149,150,151,152,153,154,156,157,165,166,167,170,],[57,57,57,57,-36,-37,-38,-39,-40,-41,-42,57,57,57,57,57,57,57,57,-57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-63,57,-20,57,-61,-64,57,-55,-56,-58,-59,57,-47,-48,-49,-50,-51,-52,-53,-54,-62,57,-60,-43,-44,-65,]),'STRING':([36,37,39,44,45,46,47,48,49,50,51,53,54,55,61,65,67,68,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,95,97,105,122,123,124,128,131,138,139,140,141,146,147,148,149,150,151,152,153,154,156,157,165,166,167,170,],[58,58,58,58,-36,-37,-38,-39,-40,-41,-42,58,58,58,58,58,58,58,58,-57,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-63,58,-20,58,-61,-64,58,-55,-56,-58,-59,58,-47,-48,-49,-50,-51,-52,-53,-54,-62,58,-60,-43,-44,-65,]),'TRUE':([36,37,39,44,45,46,47,48,49,50,51,53,54,55,61,65,67,68,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,95,97,105,122,123,124,128,131,138,139,140,141,146,147,148,149,150,151,152,153,154,156,157,165,166,167,170,],[59,59,59,59,-36,-37,-38,-39,-40,-41,-42,59,59,59,59,59,59,59,59,-57,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-63,59,-20,59,-61,-64,59,-55,-56,-58,-59,59,-47,-48,-49,-50,-51,-52,-53,-54,-62,59,-60,-43,-44,-65,]),'FALSE':([36,37,39,44,45,46,47,48,49,50,51,53,54,55,61,65,67,68,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,95,97,105,122,123,124,128,131,138,139,140,141,146,147,148,149,150,151,152,153,154,156,157,165,166,167,170,],[60,60,60,60,-36,-37,-38,-39,-40,-41,-42,60,60,60,60,60,60,60,60,-57,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-63,60,-20,60,-61,-64,60,-55,-56,-58,-59,60,-47,-48,-49,-50,-51,-52,-53,-54,-62,60,-60,-43,-44,-65,]),'NOT_UNARY':([36,37,39,44,45,46,47,48,49,50,51,53,54,55,61,65,67,68,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,95,97,105,122,123,124,128,131,138,139,140,141,146,147,148,149,150,151,152,153,154,156,157,165,166,167,170,],[61,61,61,61,-36,-37,-38,-39,-40,-41,-42,61,61,61,61,61,61,61,61,-57,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-63,61,-20,61,-61,-64,61,-55,-56,-58,-59,61,-47,-48,-49,-50,-51,-52,-53,-54,-62,61,-60,-43,-44,-65,]),'GETARRAY':([36,37,39,44,45,46,47,48,49,50,51,53,54,55,61,65,67,68,73,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,95,97,105,122,123,124,128,131,138,139,140,141,146,147,148,149,150,151,152,153,154,156,157,165,166,167,170,],[62,62,62,62,-36,-37,-38,-39,-40,-41,-42,62,62,62,62,62,62,62,62,-57,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-63,62,-20,62,-61,-64,62,-55,-56,-58,-59,62,-47,-48,-49,-50,-51,-52,-53,-54,-62,62,-60,-43,-44,-65,]),'LBRACKET':([38,62,69,71,],[67,93,103,105,]),'SEMICOLON':([38,52,56,57,58,59,60,66,71,73,91,92,96,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,129,130,155,159,160,161,162,163,164,169,],[-84,75,-81,-82,-83,-85,-86,97,-84,-21,-79,-87,128,-80,138,139,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,156,-88,-90,-89,-15,-16,-17,-18,-19,-88,170,]),'PLUS':([38,52,56,57,58,59,60,70,71,89,90,91,92,96,98,102,104,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,127,129,130,137,155,164,169,],[-84,76,-81,-82,-83,-85,-86,76,-84,76,76,-79,76,76,76,76,-80,76,-66,-67,-68,-69,-70,76,76,76,76,76,76,76,76,76,76,-88,-90,76,-89,-88,76,]),'TIMES':([38,52,56,57,58,59,60,70,71,89,90,91,92,96,98,102,104,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,127,129,130,137,155,164,169,],[-84,78,-81,-82,-83,-85,-86,78,-84,78,78,-79,78,78,78,78,-80,78,78,78,-68,-69,-70,78,78,78,78,78,78,78,78,78,78,-88,-90,78,-89,-88,78,]),'DIVIDE':([38,52,56,57,58,59,60,70,71,89,90,91,92,96,98,102,104,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,127,129,130,137,155,164,169,],[-84,79,-81,-82,-83,-85,-86,79,-84,79,79,-79,79,79,79,79,-80,79,79,79,-68,-69,-70,79,79,79,79,79,79,79,79,79,79,-88,-90,79,-89,-88,79,]),'MOD':([38,52,56,57,58,59,60,70,71,89,90,91,92,96,98,102,104,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,127,129,130,137,155,164,169,],[-84,80,-81,-82,-83,-85,-86,80,-84,80,80,-79,80,80,80,80,-80,80,80,80,-68,-69,-70,80,80,80,80,80,80,80,80,80,80,-88,-90,80,-89,-88,80,]),'AND':([38,52,56,57,58,59,60,70,71,89,90,91,92,96,98,102,104,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,127,129,130,137,155,164,169,],[-84,81,-81,-82,-83,-85,-86,81,-84,81,81,-79,-87,81,81,81,-80,81,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,81,81,-88,-90,81,-89,-88,81,]),'OR':([38,52,56,57,58,59,60,70,71,89,90,91,92,96,98,102,104,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,127,129,130,137,155,164,169,],[-84,82,-81,-82,-83,-85,-86,82,-84,82,82,-79,-87,82,82,82,-80,82,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,82,82,-88,-90,82,-89,-88,82,]),'EQUALS_EQUALS':([38,52,56,57,58,59,60,70,71,89,90,91,92,96,98,102,104,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,127,129,130,137,155,164,169,],[-84,83,-81,-82,-83,-85,-86,83,-84,83,83,-79,-87,83,83,83,-80,83,-66,-67,-68,-69,-70,83,83,None,None,-75,-76,-77,-78,83,83,-88,-90,83,-89,-88,83,]),'NOT_EQUALS':([38,52,56,57,58,59,60,70,71,89,90,91,92,96,98,102,104,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,127,129,130,137,155,164,169,],[-84,84,-81,-82,-83,-85,-86,84,-84,84,84,-79,-87,84,84,84,-80,84,-66,-67,-68,-69,-70,84,84,None,None,-75,-76,-77,-78,84,84,-88,-90,84,-89,-88,84,]),'GREATER':([38,52,56,57,58,59,60,70,71,89,90,91,92,96,98,102,104,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,127,129,130,137,155,164,169,],[-84,85,-81,-82,-83,-85,-86,85,-84,85,85,-79,None,85,85,85,-80,85,-66,-67,-68,-69,-70,85,85,85,85,None,None,None,None,85,85,-88,-90,85,-89,-88,85,]),'LESS':([38,52,56,57,58,59,60,70,71,89,90,91,92,96,98,102,104,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,127,129,130,137,155,164,169,],[-84,86,-81,-82,-83,-85,-86,86,-84,86,86,-79,None,86,86,86,-80,86,-66,-67,-68,-69,-70,86,86,86,86,None,None,None,None,86,86,-88,-90,86,-89,-88,86,]),'GREATER_EQUAL':([38,52,56,57,58,59,60,70,71,89,90,91,92,96,98,102,104,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,127,129,130,137,155,164,169,],[-84,87,-81,-82,-83,-85,-86,87,-84,87,87,-79,None,87,87,87,-80,87,-66,-67,-68,-69,-70,87,87,87,87,None,None,None,None,87,87,-88,-90,87,-89,-88,87,]),'LESS_EQUAL':([38,52,56,57,58,59,60,70,71,89,90,91,92,96,98,102,104,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,127,129,130,137,155,164,169,],[-84,88,-81,-82,-83,-85,-86,88,-84,88,88,-79,None,88,88,88,-80,88,-66,-67,-68,-69,-70,88,88,88,88,None,None,None,None,88,88,-88,-90,88,-89,-88,88,]),'RBRACKET':([56,57,58,59,60,71,91,92,98,104,109,110,111,112,113,114,115,116,117,118,119,120,121,125,130,132,133,134,135,136,137,155,164,],[-81,-82,-83,-85,-86,-84,-79,-87,129,-80,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-78,155,-90,159,160,161,162,163,164,-89,-88,]),'RBRACE':([72,75,94,97,122,123,124,128,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,156,165,166,167,168,170,],[106,-57,126,-63,-20,-20,-61,-64,-55,-56,-58,-59,166,167,-32,-30,-47,-48,-49,-50,-51,-52,-53,-54,-62,-60,-43,-44,-31,-65,]),'ELSE':([122,166,167,],[142,-43,-44,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program_helper':([0,3,4,],[2,7,8,]),'declaration':([0,3,4,],[3,3,3,]),'definition':([0,3,4,],[4,4,4,]),'arguments':([11,12,],[14,17,]),'empty_args':([11,12,73,],[15,18,107,]),'args':([11,12,25,],[16,16,35,]),'type':([13,21,22,23,24,38,],[19,31,32,33,34,64,]),'def_block':([36,37,],[40,63,]),'def_statments':([36,37,],[41,41,]),'empty':([36,37,122,123,],[42,42,141,144,]),'def_stats':([36,37,44,],[43,43,74,]),'def_statment':([36,37,44,],[44,44,44,]),'statment_expression':([36,37,44,123,146,],[45,45,45,148,148,]),'if':([36,37,44,123,146,],[46,46,46,149,149,]),'while':([36,37,44,123,146,],[47,47,47,150,150,]),'var_decl':([36,37,44,123,146,],[48,48,48,151,151,]),'var_assign':([36,37,44,123,146,],[49,49,49,152,152,]),'array_decl':([36,37,44,123,146,],[50,50,50,153,153,]),'array_assign':([36,37,44,123,146,],[51,51,51,154,154,]),'expression':([36,37,39,44,53,54,55,61,65,67,68,73,76,77,78,79,80,81,82,83,84,85,86,87,88,93,95,105,123,131,146,157,],[52,52,70,52,89,90,91,92,96,98,102,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,127,137,52,102,52,169,]),'array_type':([38,],[66,]),'return':([40,63,123,146,],[72,94,147,147,]),'arguments_funinvocation':([68,],[99,]),'args_inv':([68,131,],[100,158,]),'empty_args_inv':([68,],[101,]),'block':([89,90,142,],[122,124,165,]),'else':([122,],[140,]),'statments':([123,],[143,]),'stats':([123,146,],[145,168,]),'statment':([123,146,],[146,146,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program_helper -> declaration program_helper','program_helper',2,'p_program_helper','project2.py',143),
  ('program_helper -> definition program_helper','program_helper',2,'p_program_helper','project2.py',144),
  ('program_helper -> declaration','program_helper',1,'p_program_helper','project2.py',145),
  ('program_helper -> definition','program_helper',1,'p_program_helper','project2.py',146),
  ('program -> program_helper','program',1,'p_program','project2.py',153),
  ('declaration -> DECL VARIABLE LPAREN arguments RPAREN type','declaration',6,'p_declaration','project2.py',157),
  ('declaration -> DECL VARIABLE LPAREN empty_args RPAREN type','declaration',6,'p_declaration','project2.py',158),
  ('definition -> DEF VARIABLE LPAREN arguments RPAREN type LBRACE def_block return RBRACE','definition',10,'p_definition','project2.py',165),
  ('definition -> DEF VARIABLE LPAREN empty_args RPAREN type LBRACE def_block return RBRACE','definition',10,'p_definition','project2.py',166),
  ('type -> COLON TYPE_INT','type',2,'p_type','project2.py',171),
  ('type -> COLON TYPE_FLOAT','type',2,'p_type','project2.py',172),
  ('type -> COLON TYPE_VOID','type',2,'p_type','project2.py',173),
  ('type -> COLON TYPE_STRING','type',2,'p_type','project2.py',174),
  ('type -> COLON TYPE_BOOLEAN','type',2,'p_type','project2.py',175),
  ('array_type -> COLON LBRACKET TYPE_INT RBRACKET','array_type',4,'p_array_type','project2.py',179),
  ('array_type -> COLON LBRACKET TYPE_FLOAT RBRACKET','array_type',4,'p_array_type','project2.py',180),
  ('array_type -> COLON LBRACKET TYPE_VOID RBRACKET','array_type',4,'p_array_type','project2.py',181),
  ('array_type -> COLON LBRACKET TYPE_STRING RBRACKET','array_type',4,'p_array_type','project2.py',182),
  ('array_type -> COLON LBRACKET TYPE_BOOLEAN RBRACKET','array_type',4,'p_array_type','project2.py',183),
  ('empty -> <empty>','empty',0,'p_empty','project2.py',187),
  ('empty_args -> <empty>','empty_args',0,'p_empty_args','project2.py',190),
  ('empty_args_inv -> <empty>','empty_args_inv',0,'p_empty_args_inv','project2.py',194),
  ('args -> VARIABLE type COMMA args','args',4,'p_argument_helper','project2.py',198),
  ('args -> VARIABLE type','args',2,'p_argument_helper','project2.py',199),
  ('arguments -> args','arguments',1,'p_arguments','project2.py',206),
  ('args_inv -> expression COMMA args_inv','args_inv',3,'p_arguments_funinvocation_helper','project2.py',211),
  ('args_inv -> expression','args_inv',1,'p_arguments_funinvocation_helper','project2.py',212),
  ('arguments_funinvocation -> args_inv','arguments_funinvocation',1,'p_arguments_funinvocation','project2.py',219),
  ('arguments_funinvocation -> empty_args_inv','arguments_funinvocation',1,'p_arguments_funinvocation','project2.py',220),
  ('stats -> statment','stats',1,'p_statment_helper','project2.py',225),
  ('stats -> statment stats','stats',2,'p_statment_helper','project2.py',226),
  ('statments -> stats','statments',1,'p_statments','project2.py',233),
  ('def_stats -> def_statment','def_stats',1,'p_def_statment_helper','project2.py',238),
  ('def_stats -> def_statment def_stats','def_stats',2,'p_def_statment_helper','project2.py',239),
  ('def_statments -> def_stats','def_statments',1,'p_def_statments','project2.py',246),
  ('def_statment -> statment_expression','def_statment',1,'p_def_statment','project2.py',251),
  ('def_statment -> if','def_statment',1,'p_def_statment','project2.py',252),
  ('def_statment -> while','def_statment',1,'p_def_statment','project2.py',253),
  ('def_statment -> var_decl','def_statment',1,'p_def_statment','project2.py',254),
  ('def_statment -> var_assign','def_statment',1,'p_def_statment','project2.py',255),
  ('def_statment -> array_decl','def_statment',1,'p_def_statment','project2.py',256),
  ('def_statment -> array_assign','def_statment',1,'p_def_statment','project2.py',257),
  ('block -> LBRACE statments RBRACE','block',3,'p_block','project2.py',261),
  ('block -> LBRACE empty RBRACE','block',3,'p_block','project2.py',262),
  ('def_block -> def_statments','def_block',1,'p_def_block','project2.py',267),
  ('def_block -> empty','def_block',1,'p_def_block','project2.py',268),
  ('statment -> return','statment',1,'p_statment','project2.py',272),
  ('statment -> statment_expression','statment',1,'p_statment','project2.py',273),
  ('statment -> if','statment',1,'p_statment','project2.py',274),
  ('statment -> while','statment',1,'p_statment','project2.py',275),
  ('statment -> var_decl','statment',1,'p_statment','project2.py',276),
  ('statment -> var_assign','statment',1,'p_statment','project2.py',277),
  ('statment -> array_decl','statment',1,'p_statment','project2.py',278),
  ('statment -> array_assign','statment',1,'p_statment','project2.py',279),
  ('return -> RETURN empty_args SEMICOLON','return',3,'p_statment_return','project2.py',283),
  ('return -> RETURN expression SEMICOLON','return',3,'p_statment_return','project2.py',284),
  ('statment_expression -> expression SEMICOLON','statment_expression',2,'p_statment_expression','project2.py',291),
  ('if -> IF expression block else','if',4,'p_statment_if','project2.py',295),
  ('if -> IF expression block empty','if',4,'p_statment_if','project2.py',296),
  ('else -> ELSE block','else',2,'p_statment_else','project2.py',303),
  ('while -> WHILE expression block','while',3,'p_statment_while','project2.py',307),
  ('var_decl -> VARIABLE type EQUALS expression SEMICOLON','var_decl',5,'p_statment_vardecl','project2.py',311),
  ('array_decl -> VARIABLE array_type SEMICOLON','array_decl',3,'p_statment_arraydecl','project2.py',315),
  ('var_assign -> VARIABLE EQUALS expression SEMICOLON','var_assign',4,'p_statment_varassign','project2.py',319),
  ('array_assign -> VARIABLE LBRACKET expression RBRACKET EQUALS expression SEMICOLON','array_assign',7,'p_statment_arrayassign','project2.py',323),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','project2.py',327),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','project2.py',328),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','project2.py',329),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','project2.py',330),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','project2.py',331),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','project2.py',332),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','project2.py',333),
  ('expression -> expression EQUALS_EQUALS expression','expression',3,'p_expression_binop','project2.py',334),
  ('expression -> expression NOT_EQUALS expression','expression',3,'p_expression_binop','project2.py',335),
  ('expression -> expression GREATER expression','expression',3,'p_expression_binop','project2.py',336),
  ('expression -> expression LESS expression','expression',3,'p_expression_binop','project2.py',337),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_expression_binop','project2.py',338),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_expression_binop','project2.py',339),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','project2.py',343),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','project2.py',347),
  ('expression -> FLOAT','expression',1,'p_expression_float','project2.py',351),
  ('expression -> INT','expression',1,'p_expression_int','project2.py',355),
  ('expression -> STRING','expression',1,'p_expression_string','project2.py',359),
  ('expression -> VARIABLE','expression',1,'p_expression_var','project2.py',363),
  ('expression -> TRUE','expression',1,'p_expression_boolean','project2.py',367),
  ('expression -> FALSE','expression',1,'p_expression_boolean','project2.py',368),
  ('expression -> NOT_UNARY expression','expression',2,'p_expression_notunary','project2.py',372),
  ('expression -> VARIABLE LBRACKET expression RBRACKET','expression',4,'p_expression_index','project2.py',376),
  ('expression -> GETARRAY LBRACKET expression RBRACKET','expression',4,'p_expression_index','project2.py',377),
  ('expression -> VARIABLE LPAREN arguments_funinvocation RPAREN','expression',4,'p_expression_funinvocation','project2.py',381),
]
