
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftANDORnonassocEQUALS_EQUALSNOT_EQUALSnonassocGREATERLESSGREATER_EQUALLESS_EQUALNOT_UNARYleftPLUSMINUSleftTIMESDIVIDEMODrightUMINUSAND COLON COMMA CREATEARRAY DECL DEF DIVIDE ELSE EQUALS EQUALS_EQUALS FALSE FLOAT GETARRAY GREATER GREATER_EQUAL IF INT LAMBDA LBRACE LBRACKET LESS LESS_EQUAL LPAREN MINUS MOD NOT_EQUALS NOT_UNARY OR PLUS PRINT RBRACE RBRACKET RETURN RPAREN SEMICOLON STRING TIMES TRUE TYPE_BOOLEAN TYPE_FLOAT TYPE_INT TYPE_STRING TYPE_VOID USING VARIABLE WHILEprogram_helper : declaration program_helper\n\t                  | definition program_helper\n\t                  | declaration\n\t                  | definitionusing : USING PRINT SEMICOLON using\n\t\t     | USING GETARRAY SEMICOLON using\n\t\t     | USING CREATEARRAY SEMICOLON using\n\t\t     | emptyprogram : using program_helperdeclaration : DECL VARIABLE LPAREN arguments RPAREN type\n\t\t\t\t   | DECL VARIABLE LPAREN empty_args RPAREN typedefinition : DEF VARIABLE LPAREN arguments RPAREN type LBRACE def_block  return RBRACE\n\t              | DEF VARIABLE LPAREN empty_args RPAREN type LBRACE def_block return RBRACEtype : COLON TYPE_INT\n\t\t\t| COLON TYPE_FLOAT\n\t\t\t| COLON TYPE_VOID\n\t\t\t| COLON TYPE_STRING\n\t\t\t| COLON TYPE_BOOLEANempty : empty_args : empty_args_inv : args : VARIABLE type COMMA args\n\t        | VARIABLE typearguments : argsargs_inv : expression COMMA args_inv\n\t            | expressionarguments_funinvocation : args_inv\n\t                           | empty_args_invstats : statment\n\t         | statment statsstatments : statsdef_stats : def_statment\n\t             | def_statment def_statsdef_statments : def_statsdef_statment : statment_expression\n\t\t\t\t    | if\n\t\t\t\t    | if_else\n\t\t\t\t    | while\n\t\t\t\t    | var_decl\n\t\t\t\t    | var_assign\n\t\t\t\t    | array_decl\n\t\t\t\t    | array_assign\n\t\t\t\t    | printblock : LBRACE statments RBRACE\n\t         | LBRACE empty RBRACEdef_block : def_statments\n\t             | emptystatment : return\n\t\t\t\t| statment_expression\n\t\t\t\t| if\n\t\t\t\t| if_else\n\t\t\t\t| while\n\t\t\t\t| var_decl\n\t\t\t\t| var_assign\n\t\t\t\t| array_decl\n\t\t\t\t| array_assign\n\t\t\t\t| printprint_helper : COMMA expression\n\t                | COMMA expression print_helperprint : PRINT LPAREN STRING print_helper RPAREN SEMICOLON\n\t         | PRINT LPAREN STRING empty RPAREN SEMICOLONreturn : RETURN empty_args SEMICOLON\n\t\t\t  | RETURN expression SEMICOLON\n\t\t\t  | RETURN lambda_expression SEMICOLONstatment_expression : expression SEMICOLONif : IF expression blockif_else : IF expression block ELSE blockwhile : WHILE expression blockvar_decl : VARIABLE type EQUALS expression SEMICOLON\n\t\t\t\t| VARIABLE type EQUALS lambda_expression SEMICOLONcreate_array : CREATEARRAY LPAREN expression RPARENarray_decl : VARIABLE type LBRACKET expression RBRACKET SEMICOLON\n\t              | VARIABLE type EQUALS create_array SEMICOLONvar_assign : VARIABLE EQUALS expression SEMICOLON\n\t\t\t\t  | VARIABLE EQUALS lambda_expression SEMICOLONarray_assign : VARIABLE LBRACKET expression RBRACKET EQUALS expression SEMICOLONlambda_args : VARIABLE type\n\t               | VARIABLE type COMMA lambda_argslambda_expression : LAMBDA lambda_args COLON expression\n\t\t\t\t\t\t | LAMBDA empty COLON expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression                 \n                  | expression MOD expression            \n                  | expression AND expression\n                  | expression OR expression\n                  | expression EQUALS_EQUALS expression\n                  | expression NOT_EQUALS expression\n                  | expression GREATER expression\n                  | expression LESS expression\n                  | expression GREATER_EQUAL expression\n                  | expression LESS_EQUAL expressionexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPAREN\n    \t\t\t  | LPAREN lambda_expression RPARENexpression : FLOATexpression : INTexpression : STRINGexpression : VARIABLEexpression : TRUE\n\t\t\t\t  | FALSEexpression : NOT_UNARY expressionget_array : GETARRAY LPAREN VARIABLE RPARENexpression : VARIABLE LBRACKET expression RBRACKET\n\t\t\t\t  | get_array LBRACKET expression RBRACKETexpression : VARIABLE LPAREN arguments_funinvocation RPARENexpression : VARIABLE LPAREN arguments_funinvocation RPAREN LPAREN arguments_funinvocation RPAREN'
    
_lr_action_items = {'USING':([0,17,18,19,],[3,3,3,3,]),'DECL':([0,2,4,6,7,17,18,19,22,23,24,38,39,40,41,42,43,44,128,151,],[-19,8,-8,8,8,-19,-19,-19,-5,-6,-7,-14,-15,-16,-17,-18,-10,-11,-12,-13,]),'DEF':([0,2,4,6,7,17,18,19,22,23,24,38,39,40,41,42,43,44,128,151,],[-19,9,-8,9,9,-19,-19,-19,-5,-6,-7,-14,-15,-16,-17,-18,-10,-11,-12,-13,]),'$end':([1,5,6,7,13,14,38,39,40,41,42,43,44,128,151,],[0,-9,-3,-4,-1,-2,-14,-15,-16,-17,-18,-10,-11,-12,-13,]),'PRINT':([3,48,49,56,57,58,59,60,61,62,63,64,65,91,145,146,147,157,158,166,167,168,173,174,175,176,177,178,179,180,181,182,183,189,190,191,201,202,203,209,213,214,217,],[10,69,69,69,-35,-36,-37,-38,-39,-40,-41,-42,-43,-65,-66,69,-68,-74,-75,-62,-63,-64,69,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-69,-70,-73,-67,-44,-45,-72,-60,-61,-76,]),'GETARRAY':([3,48,49,51,56,57,58,59,60,61,62,63,64,65,67,68,71,76,81,82,83,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,110,113,114,124,145,146,147,157,158,161,163,164,166,167,168,173,174,175,176,177,178,179,180,181,182,183,186,189,190,191,192,194,195,201,202,203,209,213,214,217,],[11,78,78,78,78,-35,-36,-37,-38,-39,-40,-41,-42,-43,78,78,78,78,78,78,78,78,-65,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-66,78,-68,-74,-75,78,78,78,-62,-63,-64,78,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,78,-69,-70,-73,78,78,78,-67,-44,-45,-72,-60,-61,-76,]),'CREATEARRAY':([3,113,],[12,155,]),'VARIABLE':([8,9,20,21,37,48,49,51,56,57,58,59,60,61,62,63,64,65,67,68,71,76,81,82,83,87,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,110,111,113,114,124,145,146,147,157,158,161,163,164,166,167,168,173,174,175,176,177,178,179,180,181,182,183,186,189,190,191,192,194,195,200,201,202,203,209,213,214,217,],[15,16,25,25,25,50,50,86,50,-35,-36,-37,-38,-39,-40,-41,-42,-43,86,86,86,86,86,86,86,127,86,-65,86,86,86,86,86,86,86,86,86,86,86,86,86,86,150,86,86,86,-66,50,-68,-74,-75,86,86,86,-62,-63,-64,50,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,86,-69,-70,-73,86,86,86,127,-67,-44,-45,-72,-60,-61,-76,]),'SEMICOLON':([10,11,12,50,66,70,72,73,74,75,86,89,108,109,115,116,122,123,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,152,153,154,159,160,187,193,197,198,199,205,206,210,216,218,],[17,18,19,-100,91,-99,-97,-98,-101,-102,-100,-20,-94,-103,157,158,-95,-96,166,167,168,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,189,190,191,-105,-107,-106,209,-105,-79,-80,213,214,217,-71,-108,]),'LPAREN':([15,16,48,49,50,51,56,57,58,59,60,61,62,63,64,65,67,68,69,71,76,78,81,82,83,86,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,110,113,114,124,145,146,147,155,157,158,160,161,163,164,166,167,168,173,174,175,176,177,178,179,180,181,182,183,186,189,190,191,192,194,195,201,202,203,209,213,214,217,],[20,21,51,51,83,51,51,-35,-36,-37,-38,-39,-40,-41,-42,-43,51,51,107,51,51,111,51,51,51,83,51,-65,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-66,51,-68,192,-74,-75,195,51,51,51,-62,-63,-64,51,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,51,-69,-70,-73,51,51,51,-67,-44,-45,-72,-60,-61,-76,]),'RPAREN':([20,21,26,27,28,29,30,31,38,39,40,41,42,47,70,72,73,74,75,83,84,85,86,108,109,118,119,120,121,122,123,132,133,134,135,136,137,138,139,140,141,142,143,144,148,150,160,184,185,187,195,196,197,198,199,207,208,211,215,218,],[-20,-20,33,34,-24,35,36,-23,-14,-15,-16,-17,-18,-22,-99,-97,-98,-101,-102,-21,122,123,-100,-94,-103,160,-27,-28,-26,-95,-96,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-19,188,-107,205,206,-106,-21,-25,-105,-79,-80,-58,216,218,-59,-108,]),'COLON':([25,33,34,35,36,38,39,40,41,42,50,87,125,126,127,165,212,],[32,32,32,32,32,-14,-15,-16,-17,-18,32,-19,163,164,32,-77,-78,]),'COMMA':([31,38,39,40,41,42,70,72,73,74,75,86,108,109,121,122,123,132,133,134,135,136,137,138,139,140,141,142,143,144,148,160,165,187,197,207,218,],[37,-14,-15,-16,-17,-18,-99,-97,-98,-101,-102,-100,-94,-103,161,-95,-96,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,186,-107,200,-106,-105,186,-108,]),'TYPE_INT':([32,],[38,]),'TYPE_FLOAT':([32,],[39,]),'TYPE_VOID':([32,],[40,]),'TYPE_STRING':([32,],[41,]),'TYPE_BOOLEAN':([32,],[42,]),'LBRACE':([38,39,40,41,42,45,46,70,72,73,74,75,86,105,106,108,109,122,123,132,133,134,135,136,137,138,139,140,141,142,143,144,160,169,187,197,218,],[-14,-15,-16,-17,-18,48,49,-99,-97,-98,-101,-102,-100,146,146,-94,-103,-95,-96,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-107,146,-106,-105,-108,]),'EQUALS':([38,39,40,41,42,50,80,159,],[-14,-15,-16,-17,-18,81,113,194,]),'LBRACKET':([38,39,40,41,42,50,77,80,86,188,],[-14,-15,-16,-17,-18,82,110,114,124,-104,]),'RETURN':([48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,79,90,91,145,146,147,157,158,166,167,168,173,174,175,176,177,178,179,180,181,182,183,189,190,191,201,202,203,209,213,214,217,],[-19,-19,89,-46,-47,-34,-32,-35,-36,-37,-38,-39,-40,-41,-42,-43,89,-33,-65,-66,89,-68,-74,-75,-62,-63,-64,89,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-69,-70,-73,-67,-44,-45,-72,-60,-61,-76,]),'IF':([48,49,56,57,58,59,60,61,62,63,64,65,91,145,146,147,157,158,166,167,168,173,174,175,176,177,178,179,180,181,182,183,189,190,191,201,202,203,209,213,214,217,],[67,67,67,-35,-36,-37,-38,-39,-40,-41,-42,-43,-65,-66,67,-68,-74,-75,-62,-63,-64,67,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-69,-70,-73,-67,-44,-45,-72,-60,-61,-76,]),'WHILE':([48,49,56,57,58,59,60,61,62,63,64,65,91,145,146,147,157,158,166,167,168,173,174,175,176,177,178,179,180,181,182,183,189,190,191,201,202,203,209,213,214,217,],[68,68,68,-35,-36,-37,-38,-39,-40,-41,-42,-43,-65,-66,68,-68,-74,-75,-62,-63,-64,68,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-69,-70,-73,-67,-44,-45,-72,-60,-61,-76,]),'MINUS':([48,49,50,51,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,72,73,74,75,76,81,82,83,84,86,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,113,114,115,117,121,122,123,124,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,152,156,157,158,159,160,161,162,163,164,166,167,168,173,174,175,176,177,178,179,180,181,182,183,186,187,189,190,191,192,194,195,197,198,199,201,202,203,207,208,209,210,213,214,217,218,],[71,71,-100,71,71,-35,-36,-37,-38,-39,-40,-41,-42,-43,93,71,71,-99,71,-97,-98,-101,-102,71,71,71,71,93,-100,71,-65,71,71,71,71,71,71,71,71,71,71,71,71,71,93,93,-94,93,71,71,71,93,93,93,-95,-96,71,93,-81,-82,-83,-84,-85,93,93,93,93,93,93,93,93,-66,71,-68,93,93,93,-74,-75,-105,-107,71,93,71,71,-62,-63,-64,71,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,71,-106,-69,-70,-73,71,71,71,-105,93,93,-67,-44,-45,93,93,-72,93,-60,-61,-76,-108,]),'FLOAT':([48,49,51,56,57,58,59,60,61,62,63,64,65,67,68,71,76,81,82,83,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,110,113,114,124,145,146,147,157,158,161,163,164,166,167,168,173,174,175,176,177,178,179,180,181,182,183,186,189,190,191,192,194,195,201,202,203,209,213,214,217,],[72,72,72,72,-35,-36,-37,-38,-39,-40,-41,-42,-43,72,72,72,72,72,72,72,72,-65,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-66,72,-68,-74,-75,72,72,72,-62,-63,-64,72,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,72,-69,-70,-73,72,72,72,-67,-44,-45,-72,-60,-61,-76,]),'INT':([48,49,51,56,57,58,59,60,61,62,63,64,65,67,68,71,76,81,82,83,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,110,113,114,124,145,146,147,157,158,161,163,164,166,167,168,173,174,175,176,177,178,179,180,181,182,183,186,189,190,191,192,194,195,201,202,203,209,213,214,217,],[73,73,73,73,-35,-36,-37,-38,-39,-40,-41,-42,-43,73,73,73,73,73,73,73,73,-65,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-66,73,-68,-74,-75,73,73,73,-62,-63,-64,73,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,73,-69,-70,-73,73,73,73,-67,-44,-45,-72,-60,-61,-76,]),'STRING':([48,49,51,56,57,58,59,60,61,62,63,64,65,67,68,71,76,81,82,83,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,110,113,114,124,145,146,147,157,158,161,163,164,166,167,168,173,174,175,176,177,178,179,180,181,182,183,186,189,190,191,192,194,195,201,202,203,209,213,214,217,],[70,70,70,70,-35,-36,-37,-38,-39,-40,-41,-42,-43,70,70,70,70,70,70,70,70,-65,70,70,70,70,70,70,70,70,70,70,70,70,70,148,70,70,70,70,-66,70,-68,-74,-75,70,70,70,-62,-63,-64,70,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,70,-69,-70,-73,70,70,70,-67,-44,-45,-72,-60,-61,-76,]),'TRUE':([48,49,51,56,57,58,59,60,61,62,63,64,65,67,68,71,76,81,82,83,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,110,113,114,124,145,146,147,157,158,161,163,164,166,167,168,173,174,175,176,177,178,179,180,181,182,183,186,189,190,191,192,194,195,201,202,203,209,213,214,217,],[74,74,74,74,-35,-36,-37,-38,-39,-40,-41,-42,-43,74,74,74,74,74,74,74,74,-65,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-66,74,-68,-74,-75,74,74,74,-62,-63,-64,74,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,74,-69,-70,-73,74,74,74,-67,-44,-45,-72,-60,-61,-76,]),'FALSE':([48,49,51,56,57,58,59,60,61,62,63,64,65,67,68,71,76,81,82,83,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,110,113,114,124,145,146,147,157,158,161,163,164,166,167,168,173,174,175,176,177,178,179,180,181,182,183,186,189,190,191,192,194,195,201,202,203,209,213,214,217,],[75,75,75,75,-35,-36,-37,-38,-39,-40,-41,-42,-43,75,75,75,75,75,75,75,75,-65,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-66,75,-68,-74,-75,75,75,75,-62,-63,-64,75,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,75,-69,-70,-73,75,75,75,-67,-44,-45,-72,-60,-61,-76,]),'NOT_UNARY':([48,49,51,56,57,58,59,60,61,62,63,64,65,67,68,71,76,81,82,83,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,110,113,114,124,145,146,147,157,158,161,163,164,166,167,168,173,174,175,176,177,178,179,180,181,182,183,186,189,190,191,192,194,195,201,202,203,209,213,214,217,],[76,76,76,76,-35,-36,-37,-38,-39,-40,-41,-42,-43,76,76,76,76,76,76,76,76,-65,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-66,76,-68,-74,-75,76,76,76,-62,-63,-64,76,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,76,-69,-70,-73,76,76,76,-67,-44,-45,-72,-60,-61,-76,]),'PLUS':([50,66,70,72,73,74,75,84,86,105,106,108,109,115,117,121,122,123,130,132,133,134,135,136,137,138,139,140,141,142,143,144,149,152,156,159,160,162,187,197,198,199,207,208,210,218,],[-100,92,-99,-97,-98,-101,-102,92,-100,92,92,-94,92,92,92,92,-95,-96,92,-81,-82,-83,-84,-85,92,92,92,92,92,92,92,92,92,92,92,-105,-107,92,-106,-105,92,92,92,92,92,-108,]),'TIMES':([50,66,70,72,73,74,75,84,86,105,106,108,109,115,117,121,122,123,130,132,133,134,135,136,137,138,139,140,141,142,143,144,149,152,156,159,160,162,187,197,198,199,207,208,210,218,],[-100,94,-99,-97,-98,-101,-102,94,-100,94,94,-94,94,94,94,94,-95,-96,94,94,94,-83,-84,-85,94,94,94,94,94,94,94,94,94,94,94,-105,-107,94,-106,-105,94,94,94,94,94,-108,]),'DIVIDE':([50,66,70,72,73,74,75,84,86,105,106,108,109,115,117,121,122,123,130,132,133,134,135,136,137,138,139,140,141,142,143,144,149,152,156,159,160,162,187,197,198,199,207,208,210,218,],[-100,95,-99,-97,-98,-101,-102,95,-100,95,95,-94,95,95,95,95,-95,-96,95,95,95,-83,-84,-85,95,95,95,95,95,95,95,95,95,95,95,-105,-107,95,-106,-105,95,95,95,95,95,-108,]),'MOD':([50,66,70,72,73,74,75,84,86,105,106,108,109,115,117,121,122,123,130,132,133,134,135,136,137,138,139,140,141,142,143,144,149,152,156,159,160,162,187,197,198,199,207,208,210,218,],[-100,96,-99,-97,-98,-101,-102,96,-100,96,96,-94,96,96,96,96,-95,-96,96,96,96,-83,-84,-85,96,96,96,96,96,96,96,96,96,96,96,-105,-107,96,-106,-105,96,96,96,96,96,-108,]),'AND':([50,66,70,72,73,74,75,84,86,105,106,108,109,115,117,121,122,123,130,132,133,134,135,136,137,138,139,140,141,142,143,144,149,152,156,159,160,162,187,197,198,199,207,208,210,218,],[-100,97,-99,-97,-98,-101,-102,97,-100,97,97,-94,-103,97,97,97,-95,-96,97,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,97,97,97,-105,-107,97,-106,-105,97,97,97,97,97,-108,]),'OR':([50,66,70,72,73,74,75,84,86,105,106,108,109,115,117,121,122,123,130,132,133,134,135,136,137,138,139,140,141,142,143,144,149,152,156,159,160,162,187,197,198,199,207,208,210,218,],[-100,98,-99,-97,-98,-101,-102,98,-100,98,98,-94,-103,98,98,98,-95,-96,98,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,98,98,98,-105,-107,98,-106,-105,98,98,98,98,98,-108,]),'EQUALS_EQUALS':([50,66,70,72,73,74,75,84,86,105,106,108,109,115,117,121,122,123,130,132,133,134,135,136,137,138,139,140,141,142,143,144,149,152,156,159,160,162,187,197,198,199,207,208,210,218,],[-100,99,-99,-97,-98,-101,-102,99,-100,99,99,-94,-103,99,99,99,-95,-96,99,-81,-82,-83,-84,-85,99,99,None,None,-90,-91,-92,-93,99,99,99,-105,-107,99,-106,-105,99,99,99,99,99,-108,]),'NOT_EQUALS':([50,66,70,72,73,74,75,84,86,105,106,108,109,115,117,121,122,123,130,132,133,134,135,136,137,138,139,140,141,142,143,144,149,152,156,159,160,162,187,197,198,199,207,208,210,218,],[-100,100,-99,-97,-98,-101,-102,100,-100,100,100,-94,-103,100,100,100,-95,-96,100,-81,-82,-83,-84,-85,100,100,None,None,-90,-91,-92,-93,100,100,100,-105,-107,100,-106,-105,100,100,100,100,100,-108,]),'GREATER':([50,66,70,72,73,74,75,84,86,105,106,108,109,115,117,121,122,123,130,132,133,134,135,136,137,138,139,140,141,142,143,144,149,152,156,159,160,162,187,197,198,199,207,208,210,218,],[-100,101,-99,-97,-98,-101,-102,101,-100,101,101,-94,None,101,101,101,-95,-96,101,-81,-82,-83,-84,-85,101,101,101,101,None,None,None,None,101,101,101,-105,-107,101,-106,-105,101,101,101,101,101,-108,]),'LESS':([50,66,70,72,73,74,75,84,86,105,106,108,109,115,117,121,122,123,130,132,133,134,135,136,137,138,139,140,141,142,143,144,149,152,156,159,160,162,187,197,198,199,207,208,210,218,],[-100,102,-99,-97,-98,-101,-102,102,-100,102,102,-94,None,102,102,102,-95,-96,102,-81,-82,-83,-84,-85,102,102,102,102,None,None,None,None,102,102,102,-105,-107,102,-106,-105,102,102,102,102,102,-108,]),'GREATER_EQUAL':([50,66,70,72,73,74,75,84,86,105,106,108,109,115,117,121,122,123,130,132,133,134,135,136,137,138,139,140,141,142,143,144,149,152,156,159,160,162,187,197,198,199,207,208,210,218,],[-100,103,-99,-97,-98,-101,-102,103,-100,103,103,-94,None,103,103,103,-95,-96,103,-81,-82,-83,-84,-85,103,103,103,103,None,None,None,None,103,103,103,-105,-107,103,-106,-105,103,103,103,103,103,-108,]),'LESS_EQUAL':([50,66,70,72,73,74,75,84,86,105,106,108,109,115,117,121,122,123,130,132,133,134,135,136,137,138,139,140,141,142,143,144,149,152,156,159,160,162,187,197,198,199,207,208,210,218,],[-100,104,-99,-97,-98,-101,-102,104,-100,104,104,-94,None,104,104,104,-95,-96,104,-81,-82,-83,-84,-85,104,104,104,104,None,None,None,None,104,104,104,-105,-107,104,-106,-105,104,104,104,104,104,-108,]),'LAMBDA':([51,81,89,113,],[87,87,87,87,]),'RBRACKET':([70,72,73,74,75,86,108,109,117,122,123,132,133,134,135,136,137,138,139,140,141,142,143,144,149,156,160,162,187,197,218,],[-99,-97,-98,-101,-102,-100,-94,-103,159,-95,-96,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,187,193,-107,197,-106,-105,-108,]),'RBRACE':([88,91,112,145,146,147,157,158,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,182,183,189,190,191,201,202,203,204,209,213,214,217,],[128,-65,151,-66,-19,-68,-74,-75,-62,-63,-64,202,203,-31,-29,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-69,-70,-73,-67,-44,-45,-30,-72,-60,-61,-76,]),'ELSE':([145,202,203,],[169,-44,-45,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'using':([0,17,18,19,],[2,22,23,24,]),'empty':([0,17,18,19,48,49,87,146,148,],[4,4,4,4,54,54,126,171,185,]),'program_helper':([2,6,7,],[5,13,14,]),'declaration':([2,6,7,],[6,6,6,]),'definition':([2,6,7,],[7,7,7,]),'arguments':([20,21,],[26,29,]),'empty_args':([20,21,89,],[27,30,129,]),'args':([20,21,37,],[28,28,47,]),'type':([25,33,34,35,36,50,127,],[31,43,44,45,46,80,165,]),'def_block':([48,49,],[52,79,]),'def_statments':([48,49,],[53,53,]),'def_stats':([48,49,56,],[55,55,90,]),'def_statment':([48,49,56,],[56,56,56,]),'statment_expression':([48,49,56,146,173,],[57,57,57,175,175,]),'if':([48,49,56,146,173,],[58,58,58,176,176,]),'if_else':([48,49,56,146,173,],[59,59,59,177,177,]),'while':([48,49,56,146,173,],[60,60,60,178,178,]),'var_decl':([48,49,56,146,173,],[61,61,61,179,179,]),'var_assign':([48,49,56,146,173,],[62,62,62,180,180,]),'array_decl':([48,49,56,146,173,],[63,63,63,181,181,]),'array_assign':([48,49,56,146,173,],[64,64,64,182,182,]),'print':([48,49,56,146,173,],[65,65,65,183,183,]),'expression':([48,49,51,56,67,68,71,76,81,82,83,89,92,93,94,95,96,97,98,99,100,101,102,103,104,110,113,114,124,146,161,163,164,173,186,192,194,195,],[66,66,84,66,105,106,108,109,115,117,121,130,132,133,134,135,136,137,138,139,140,141,142,143,144,149,152,156,162,66,121,198,199,66,207,208,210,121,]),'get_array':([48,49,51,56,67,68,71,76,81,82,83,89,92,93,94,95,96,97,98,99,100,101,102,103,104,110,113,114,124,146,161,163,164,173,186,192,194,195,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'lambda_expression':([51,81,89,113,],[85,116,131,153,]),'return':([52,79,146,173,],[88,112,174,174,]),'arguments_funinvocation':([83,195,],[118,211,]),'args_inv':([83,161,195,],[119,196,119,]),'empty_args_inv':([83,195,],[120,120,]),'lambda_args':([87,200,],[125,212,]),'block':([105,106,169,],[145,147,201,]),'create_array':([113,],[154,]),'statments':([146,],[170,]),'stats':([146,173,],[172,204,]),'statment':([146,173,],[173,173,]),'print_helper':([148,207,],[184,215,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program_helper -> declaration program_helper','program_helper',2,'p_program_helper','cas_main.py',158),
  ('program_helper -> definition program_helper','program_helper',2,'p_program_helper','cas_main.py',159),
  ('program_helper -> declaration','program_helper',1,'p_program_helper','cas_main.py',160),
  ('program_helper -> definition','program_helper',1,'p_program_helper','cas_main.py',161),
  ('using -> USING PRINT SEMICOLON using','using',4,'p_using','cas_main.py',168),
  ('using -> USING GETARRAY SEMICOLON using','using',4,'p_using','cas_main.py',169),
  ('using -> USING CREATEARRAY SEMICOLON using','using',4,'p_using','cas_main.py',170),
  ('using -> empty','using',1,'p_using','cas_main.py',171),
  ('program -> using program_helper','program',2,'p_program','cas_main.py',178),
  ('declaration -> DECL VARIABLE LPAREN arguments RPAREN type','declaration',6,'p_declaration','cas_main.py',182),
  ('declaration -> DECL VARIABLE LPAREN empty_args RPAREN type','declaration',6,'p_declaration','cas_main.py',183),
  ('definition -> DEF VARIABLE LPAREN arguments RPAREN type LBRACE def_block return RBRACE','definition',10,'p_definition','cas_main.py',190),
  ('definition -> DEF VARIABLE LPAREN empty_args RPAREN type LBRACE def_block return RBRACE','definition',10,'p_definition','cas_main.py',191),
  ('type -> COLON TYPE_INT','type',2,'p_type','cas_main.py',196),
  ('type -> COLON TYPE_FLOAT','type',2,'p_type','cas_main.py',197),
  ('type -> COLON TYPE_VOID','type',2,'p_type','cas_main.py',198),
  ('type -> COLON TYPE_STRING','type',2,'p_type','cas_main.py',199),
  ('type -> COLON TYPE_BOOLEAN','type',2,'p_type','cas_main.py',200),
  ('empty -> <empty>','empty',0,'p_empty','cas_main.py',204),
  ('empty_args -> <empty>','empty_args',0,'p_empty_args','cas_main.py',207),
  ('empty_args_inv -> <empty>','empty_args_inv',0,'p_empty_args_inv','cas_main.py',211),
  ('args -> VARIABLE type COMMA args','args',4,'p_argument_helper','cas_main.py',215),
  ('args -> VARIABLE type','args',2,'p_argument_helper','cas_main.py',216),
  ('arguments -> args','arguments',1,'p_arguments','cas_main.py',223),
  ('args_inv -> expression COMMA args_inv','args_inv',3,'p_arguments_funinvocation_helper','cas_main.py',228),
  ('args_inv -> expression','args_inv',1,'p_arguments_funinvocation_helper','cas_main.py',229),
  ('arguments_funinvocation -> args_inv','arguments_funinvocation',1,'p_arguments_funinvocation','cas_main.py',236),
  ('arguments_funinvocation -> empty_args_inv','arguments_funinvocation',1,'p_arguments_funinvocation','cas_main.py',237),
  ('stats -> statment','stats',1,'p_statment_helper','cas_main.py',242),
  ('stats -> statment stats','stats',2,'p_statment_helper','cas_main.py',243),
  ('statments -> stats','statments',1,'p_statments','cas_main.py',250),
  ('def_stats -> def_statment','def_stats',1,'p_def_statment_helper','cas_main.py',255),
  ('def_stats -> def_statment def_stats','def_stats',2,'p_def_statment_helper','cas_main.py',256),
  ('def_statments -> def_stats','def_statments',1,'p_def_statments','cas_main.py',263),
  ('def_statment -> statment_expression','def_statment',1,'p_def_statment','cas_main.py',268),
  ('def_statment -> if','def_statment',1,'p_def_statment','cas_main.py',269),
  ('def_statment -> if_else','def_statment',1,'p_def_statment','cas_main.py',270),
  ('def_statment -> while','def_statment',1,'p_def_statment','cas_main.py',271),
  ('def_statment -> var_decl','def_statment',1,'p_def_statment','cas_main.py',272),
  ('def_statment -> var_assign','def_statment',1,'p_def_statment','cas_main.py',273),
  ('def_statment -> array_decl','def_statment',1,'p_def_statment','cas_main.py',274),
  ('def_statment -> array_assign','def_statment',1,'p_def_statment','cas_main.py',275),
  ('def_statment -> print','def_statment',1,'p_def_statment','cas_main.py',276),
  ('block -> LBRACE statments RBRACE','block',3,'p_block','cas_main.py',280),
  ('block -> LBRACE empty RBRACE','block',3,'p_block','cas_main.py',281),
  ('def_block -> def_statments','def_block',1,'p_def_block','cas_main.py',286),
  ('def_block -> empty','def_block',1,'p_def_block','cas_main.py',287),
  ('statment -> return','statment',1,'p_statment','cas_main.py',291),
  ('statment -> statment_expression','statment',1,'p_statment','cas_main.py',292),
  ('statment -> if','statment',1,'p_statment','cas_main.py',293),
  ('statment -> if_else','statment',1,'p_statment','cas_main.py',294),
  ('statment -> while','statment',1,'p_statment','cas_main.py',295),
  ('statment -> var_decl','statment',1,'p_statment','cas_main.py',296),
  ('statment -> var_assign','statment',1,'p_statment','cas_main.py',297),
  ('statment -> array_decl','statment',1,'p_statment','cas_main.py',298),
  ('statment -> array_assign','statment',1,'p_statment','cas_main.py',299),
  ('statment -> print','statment',1,'p_statment','cas_main.py',300),
  ('print_helper -> COMMA expression','print_helper',2,'p_print_helper','cas_main.py',304),
  ('print_helper -> COMMA expression print_helper','print_helper',3,'p_print_helper','cas_main.py',305),
  ('print -> PRINT LPAREN STRING print_helper RPAREN SEMICOLON','print',6,'p_statment_print','cas_main.py',312),
  ('print -> PRINT LPAREN STRING empty RPAREN SEMICOLON','print',6,'p_statment_print','cas_main.py',313),
  ('return -> RETURN empty_args SEMICOLON','return',3,'p_statment_return','cas_main.py',320),
  ('return -> RETURN expression SEMICOLON','return',3,'p_statment_return','cas_main.py',321),
  ('return -> RETURN lambda_expression SEMICOLON','return',3,'p_statment_return','cas_main.py',322),
  ('statment_expression -> expression SEMICOLON','statment_expression',2,'p_statment_expression','cas_main.py',329),
  ('if -> IF expression block','if',3,'p_statment_if','cas_main.py',333),
  ('if_else -> IF expression block ELSE block','if_else',5,'p_statment_if_else','cas_main.py',337),
  ('while -> WHILE expression block','while',3,'p_statment_while','cas_main.py',341),
  ('var_decl -> VARIABLE type EQUALS expression SEMICOLON','var_decl',5,'p_statment_vardecl','cas_main.py',345),
  ('var_decl -> VARIABLE type EQUALS lambda_expression SEMICOLON','var_decl',5,'p_statment_vardecl','cas_main.py',346),
  ('create_array -> CREATEARRAY LPAREN expression RPAREN','create_array',4,'p_create_array','cas_main.py',350),
  ('array_decl -> VARIABLE type LBRACKET expression RBRACKET SEMICOLON','array_decl',6,'p_statment_arraydecl','cas_main.py',354),
  ('array_decl -> VARIABLE type EQUALS create_array SEMICOLON','array_decl',5,'p_statment_arraydecl','cas_main.py',355),
  ('var_assign -> VARIABLE EQUALS expression SEMICOLON','var_assign',4,'p_statment_varassign','cas_main.py',359),
  ('var_assign -> VARIABLE EQUALS lambda_expression SEMICOLON','var_assign',4,'p_statment_varassign','cas_main.py',360),
  ('array_assign -> VARIABLE LBRACKET expression RBRACKET EQUALS expression SEMICOLON','array_assign',7,'p_statment_arrayassign','cas_main.py',364),
  ('lambda_args -> VARIABLE type','lambda_args',2,'p_lambda_arguments','cas_main.py',368),
  ('lambda_args -> VARIABLE type COMMA lambda_args','lambda_args',4,'p_lambda_arguments','cas_main.py',369),
  ('lambda_expression -> LAMBDA lambda_args COLON expression','lambda_expression',4,'p_expression_lambda','cas_main.py',376),
  ('lambda_expression -> LAMBDA empty COLON expression','lambda_expression',4,'p_expression_lambda','cas_main.py',377),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','cas_main.py',384),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','cas_main.py',385),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','cas_main.py',386),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','cas_main.py',387),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','cas_main.py',388),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','cas_main.py',389),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','cas_main.py',390),
  ('expression -> expression EQUALS_EQUALS expression','expression',3,'p_expression_binop','cas_main.py',391),
  ('expression -> expression NOT_EQUALS expression','expression',3,'p_expression_binop','cas_main.py',392),
  ('expression -> expression GREATER expression','expression',3,'p_expression_binop','cas_main.py',393),
  ('expression -> expression LESS expression','expression',3,'p_expression_binop','cas_main.py',394),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_expression_binop','cas_main.py',395),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_expression_binop','cas_main.py',396),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','cas_main.py',400),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','cas_main.py',404),
  ('expression -> LPAREN lambda_expression RPAREN','expression',3,'p_expression_group','cas_main.py',405),
  ('expression -> FLOAT','expression',1,'p_expression_float','cas_main.py',409),
  ('expression -> INT','expression',1,'p_expression_int','cas_main.py',413),
  ('expression -> STRING','expression',1,'p_expression_string','cas_main.py',417),
  ('expression -> VARIABLE','expression',1,'p_expression_var','cas_main.py',421),
  ('expression -> TRUE','expression',1,'p_expression_boolean','cas_main.py',425),
  ('expression -> FALSE','expression',1,'p_expression_boolean','cas_main.py',426),
  ('expression -> NOT_UNARY expression','expression',2,'p_expression_notunary','cas_main.py',430),
  ('get_array -> GETARRAY LPAREN VARIABLE RPAREN','get_array',4,'p_get_array','cas_main.py',434),
  ('expression -> VARIABLE LBRACKET expression RBRACKET','expression',4,'p_expression_index','cas_main.py',438),
  ('expression -> get_array LBRACKET expression RBRACKET','expression',4,'p_expression_index','cas_main.py',439),
  ('expression -> VARIABLE LPAREN arguments_funinvocation RPAREN','expression',4,'p_expression_funinvocation','cas_main.py',446),
  ('expression -> VARIABLE LPAREN arguments_funinvocation RPAREN LPAREN arguments_funinvocation RPAREN','expression',7,'p_expression_double_funinvocation','cas_main.py',450),
]
